---
- name: Kubernetes | Ensure required directory exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ bin_dir }}"
    - "{{ systemd_units_dir }}"
    - "{{ kubelet_systemd_dropin_dir }}"

- name: Kubernetes | Get Kubernetes binaries
  get_url:
    url: "{{ kubernetes_binaries_url }}/{{ item }}"
    mode: 0755
    dest: "{{ bin_dir }}/{{ item }}"
  with_items: "{{ kubernetes_binaries }}"
  notify: "restart kubelet"

- name: Kubernetes | Get crictl
  unarchive:
    src: "{{ crictl_release_url }}"
    dest: "{{ bin_dir }}"
    remote_src: yes

- name: Kubernetes | Get Kubelet config file
  copy:
    content: "{{ item | regex_replace( '/usr/bin', bin_dir) }}"
    dest: "{{ kubelet_systemd_unit }}"
  loop: "{{ lookup('url', kubelet_systemd_unit_url, split_lines=False, wantlist=True )}}"

- name: Kubernetes | Get Kubeadm drop-in file
  copy:
    content: "{{ item | regex_replace( '/usr/bin', bin_dir) }}"
    dest: "{{ kubeadm_systemd_dropin_file }}"
  loop: "{{ lookup('url', kubeadm_systemd_dropin_url, split_lines=False, wantlist=True )}}"

- name: Kubernetes | Ensure Kubelet is running
  systemd:
    state: started
    name: kubelet.service
    daemon_reload: yes
    enabled: yes
